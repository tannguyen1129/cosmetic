# Generated by Django 4.2 on 2023-10-28 20:29

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import shortuuid.django_fields
import tinymce.models
import userauths.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('vendor', '0001_initial'),
        ('addon', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bid', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefghijklmnopqrstuvxyz', length=10, max_length=20, prefix='', unique=True)),
                ('title', models.CharField(max_length=100)),
                ('image', models.ImageField(blank=True, default='brand.jpg', null=True, upload_to='brand')),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Brands',
            },
        ),
        migrations.CreateModel(
            name='CartOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('shipping', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('vat', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('service_fee', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('total', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('payment_status', models.CharField(choices=[('paid', 'Paid'), ('pending', 'Pending'), ('processing', 'Processing'), ('cancelled', 'Cancelled'), ('initiated', 'Initiated'), ('failed', 'failed'), ('refunding', 'refunding'), ('refunded', 'refunded'), ('unpaid', 'unpaid'), ('expired', 'expired')], default='initiated', max_length=100)),
                ('payment_method', models.CharField(blank=True, choices=[('Paypal', 'Paypal'), ('Credit/Debit Card', 'Credit/Debit Card'), ('Wallet Points', 'Wallet Points')], max_length=100, null=True)),
                ('order_status', models.CharField(choices=[('pending', 'pending'), ('fulfilled', 'fulfilled'), ('partially_fulfilled', 'Partially Fulfilled'), ('cancelled', 'Cancelled')], default='initiated', max_length=100)),
                ('delivery_status', models.CharField(choices=[('On Hold', 'On Hold'), ('Shipping Processing', 'Shipping Processing'), ('Shipped', 'Shipped'), ('Arrived', 'Arrived'), ('Delivered', 'Delivered'), ('Returning', 'Returning'), ('Returned', 'Returned')], default='On Hold', max_length=100)),
                ('tracking_id', models.CharField(blank=True, max_length=100000, null=True)),
                ('expected_delivery_date_from', models.DateField(blank=True, null=True)),
                ('expected_delivery_date_to', models.DateField(blank=True, null=True)),
                ('order_placed', models.BooleanField(default=False)),
                ('processing_order', models.BooleanField(default=False)),
                ('quality_check', models.BooleanField(default=False)),
                ('product_shipped', models.BooleanField(default=False)),
                ('product_arrived', models.BooleanField(default=False)),
                ('product_delivered', models.BooleanField(default=False)),
                ('original_total', models.DecimalField(decimal_places=2, default=0.0, help_text='The original total before discounts', max_digits=12)),
                ('saved', models.DecimalField(blank=True, decimal_places=2, default=0.0, help_text='Amount saved by customer', max_digits=12, null=True)),
                ('full_name', models.CharField(max_length=1000)),
                ('email', models.CharField(max_length=1000)),
                ('mobile', models.CharField(max_length=1000)),
                ('state', models.CharField(blank=True, max_length=1000, null=True)),
                ('town_city', models.CharField(blank=True, max_length=1000, null=True)),
                ('address', models.CharField(blank=True, max_length=1000, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=1000, null=True)),
                ('invoice', models.BooleanField(default=False)),
                ('gift', models.BooleanField(default=False)),
                ('stripe_payment_intent', models.CharField(blank=True, max_length=200, null=True)),
                ('oid', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefghijklmnopqrstuvxyz', length=10, max_length=25, prefix='')),
                ('success_id', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefghijklmnopqrstuvxyz1234567890', length=300, max_length=505, prefix='')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('buyer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='buyer', to=settings.AUTH_USER_MODEL)),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='country_tax', to='addon.tax')),
            ],
            options={
                'verbose_name_plural': 'Cart Order',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cid', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefghijklmnopqrstuvxyz', length=10, max_length=20, prefix='', unique=True)),
                ('title', models.CharField(max_length=100)),
                ('image', models.ImageField(blank=True, default='category.jpg', null=True, upload_to='category')),
                ('active', models.BooleanField(default=True)),
                ('slug', models.SlugField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=1000)),
                ('type', models.CharField(choices=[('Percentage', 'Percentage'), ('Flat Rate', 'Flat Rate')], default='Percentage', max_length=100)),
                ('discount', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('redemption', models.IntegerField(default=0)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('active', models.BooleanField(default=True)),
                ('make_public', models.BooleanField(default=False)),
                ('valid_from', models.DateField()),
                ('valid_to', models.DateField()),
                ('cid', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefghijklmnopqrstuvxyz', length=10, max_length=25, prefix='')),
                ('used_by', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
                ('vendor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='coupon_vendor', to='vendor.vendor')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='DeliveryCouriers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('couriers_name', models.CharField(blank=True, max_length=1000, null=True)),
                ('couriers_tracking_website_address', models.URLField(blank=True, null=True)),
                ('url_parameter', models.CharField(blank=True, max_length=1000, null=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Delivery Couriers',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('image', models.FileField(blank=True, default='product.jpg', null=True, upload_to=userauths.models.user_directory_path)),
                ('description', tinymce.models.HTMLField(blank=True, default='')),
                ('price', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=12, null=True)),
                ('old_price', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=12, null=True)),
                ('shipping_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('stock_qty', models.PositiveIntegerField(default=0)),
                ('in_stock', models.BooleanField(default=True)),
                ('status', models.CharField(blank=True, choices=[('draft', 'Draft'), ('disabled', 'Disabled'), ('rejected', 'Rejected'), ('in_review', 'In Review'), ('published', 'Published')], default='published', max_length=10, null=True)),
                ('type', models.CharField(choices=[('regular', 'Regular'), ('auction', 'Auction'), ('offer', 'Offer')], default='regular', max_length=10)),
                ('featured', models.BooleanField(default=False)),
                ('hot_deal', models.BooleanField(default=False)),
                ('special_offer', models.BooleanField(default=False)),
                ('digital', models.BooleanField(default=False)),
                ('views', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('orders', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('saved', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('rating', models.IntegerField(blank=True, default=0, null=True)),
                ('sku', shortuuid.django_fields.ShortUUIDField(alphabet='1234567890', length=5, max_length=50, prefix='SKU', unique=True)),
                ('pid', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefghijklmnopqrstuvxyz', length=10, max_length=20, prefix='', unique=True)),
                ('slug', models.SlugField(blank=True, null=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_brand', to='store.brand')),
                ('category', models.ManyToManyField(blank=True, related_name='category', to='store.category')),
            ],
            options={
                'verbose_name_plural': 'Products',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wishlist', to='store.product')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Wishlist',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30)),
                ('active', models.BooleanField(default=True)),
                ('slug', models.SlugField(max_length=30, unique=True, verbose_name='Tag slug')),
                ('category', models.ForeignKey(default='', on_delete=django.db.models.deletion.PROTECT, to='store.category', verbose_name='Category')),
            ],
            options={
                'verbose_name_plural': 'Tags',
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='Specification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=10, null=True)),
                ('content', models.CharField(blank=True, max_length=10, null=True)),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='store.product')),
            ],
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=10, null=True)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='store.product')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review', models.TextField()),
                ('reply', models.CharField(blank=True, max_length=1000, null=True)),
                ('rating', models.IntegerField(choices=[(1, '★☆☆☆☆'), (2, '★★☆☆☆'), (3, '★★★☆☆'), (4, '★★★★☆'), (5, '★★★★★')], default=None)),
                ('active', models.BooleanField(default=False)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('helpful', models.ManyToManyField(blank=True, related_name='helpful', to=settings.AUTH_USER_MODEL)),
                ('not_helpful', models.ManyToManyField(blank=True, related_name='not_helpful', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviews', to='store.product')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Reviews & Rating',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='ProductFaq',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pid', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefghijklmnopqrstuvxyz', length=10, max_length=20, prefix='', unique=True)),
                ('email', models.EmailField(max_length=254)),
                ('question', models.CharField(max_length=1000)),
                ('answer', models.CharField(blank=True, max_length=10000, null=True)),
                ('active', models.BooleanField(default=False)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_faq', to='store.product')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Product Faqs',
                'ordering': ['-date'],
            },
        ),
        migrations.AddField(
            model_name='product',
            name='tags',
            field=models.ManyToManyField(blank=True, to='store.tag'),
        ),
        migrations.AddField(
            model_name='product',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='product',
            name='vendor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vendor', to='vendor.vendor'),
        ),
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.FileField(default='gallery.jpg', upload_to='product_gallery')),
                ('active', models.BooleanField(default=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('gid', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefghijklmnopqrstuvxyz', length=10, max_length=25, prefix='')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_gallery', to='store.product')),
            ],
            options={
                'verbose_name_plural': 'Product Images',
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='CouponUsers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=1000)),
                ('email', models.CharField(max_length=1000)),
                ('mobile', models.CharField(max_length=1000)),
                ('coupon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.coupon')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.cartorder')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color_name', models.CharField(blank=True, max_length=100, null=True)),
                ('color_code', models.CharField(blank=True, max_length=100, null=True)),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='store.product')),
            ],
        ),
        migrations.CreateModel(
            name='CartOrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.IntegerField(default=0)),
                ('color', models.CharField(blank=True, max_length=100, null=True)),
                ('size', models.CharField(blank=True, max_length=100, null=True)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('total', models.DecimalField(decimal_places=2, default=0.0, help_text='Total of Product price * Product Qty', max_digits=12)),
                ('shipping', models.DecimalField(decimal_places=2, default=0.0, help_text='Estimated Shipping Fee = shipping_fee * total', max_digits=12)),
                ('vat', models.DecimalField(decimal_places=2, default=0.0, help_text='Estimated Vat based on delivery country = tax_rate * (total + shipping)', max_digits=12)),
                ('service_fee', models.DecimalField(decimal_places=2, default=0.0, help_text='Estimated Service Fee = service_fee * total (paid by buyer to platform)', max_digits=12)),
                ('grand_total', models.DecimalField(decimal_places=2, default=0.0, help_text='Grand Total of all amount listed above', max_digits=12)),
                ('original_grand_total', models.DecimalField(decimal_places=2, default=0.0, help_text='Grand Total of all amount listed above before discount', max_digits=12)),
                ('coupon_discount_grand_total', models.DecimalField(blank=True, decimal_places=2, default=0.0, help_text='Grand Total after applying coupon', max_digits=12, null=True)),
                ('saved', models.DecimalField(blank=True, decimal_places=2, default=0.0, help_text='Amount saved by customer', max_digits=12, null=True)),
                ('delivery_status', models.CharField(choices=[('On Hold', 'On Hold'), ('Shipping Processing', 'Shipping Processing'), ('Shipped', 'Shipped'), ('Arrived', 'Arrived'), ('Delivered', 'Delivered'), ('Returning', 'Returning'), ('Returned', 'Returned')], default='On Hold', max_length=100)),
                ('tracking_id', models.CharField(blank=True, max_length=100000, null=True)),
                ('paid', models.BooleanField(default=False)),
                ('cancel_request', models.BooleanField(default=False)),
                ('cancel_reason', models.TextField(blank=True, null=True)),
                ('cancelled', models.BooleanField(default=False)),
                ('paypal_address', models.CharField(blank=True, max_length=1000, null=True)),
                ('applied_coupon', models.BooleanField(default=False)),
                ('oid', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefghijklmnopqrstuvxyz', length=10, max_length=25, prefix='')),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('coupon', models.ManyToManyField(blank=True, to='store.coupon')),
                ('delivery_couriers', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='store.deliverycouriers')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orderitem', to='store.cartorder')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_item', to='store.product')),
                ('vendor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='vendor.vendor')),
            ],
            options={
                'verbose_name_plural': 'Cart Order Item',
                'ordering': ['-date'],
            },
        ),
        migrations.AddField(
            model_name='cartorder',
            name='coupons',
            field=models.ManyToManyField(blank=True, to='store.coupon'),
        ),
        migrations.AddField(
            model_name='cartorder',
            name='delivery_couriers',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='store.deliverycouriers'),
        ),
        migrations.AddField(
            model_name='cartorder',
            name='vendor',
            field=models.ManyToManyField(blank=True, to='vendor.vendor'),
        ),
        migrations.CreateModel(
            name='CancelledOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=100)),
                ('refunded', models.BooleanField(default=False)),
                ('orderitem', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='store.cartorderitem')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Cancelled Order',
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=200)),
                ('mobile', models.CharField(max_length=50)),
                ('email', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('town_city', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=100)),
                ('zip', models.CharField(max_length=100)),
                ('status', models.BooleanField(default=False)),
                ('same_as_billing_address', models.BooleanField(default=False)),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='address_country', to='addon.tax')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Address',
            },
        ),
    ]
